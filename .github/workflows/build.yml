name: Build Durangling

on:
  push:
    branches: [ "master" ] # Gatilho para pushes na branch main
  workflow_dispatch: # Permite acionar manualmente

jobs:
  build:
    runs-on: windows-latest # Usa um runner Windows pois precisa do MSBuild e C++

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      # Add this line to ensure submodules (like Detours, potentially) are checked out
      with:
        submodules: recursive

    - name: Setup .NET SDK 9.0
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x' # Especifica a versão do .NET SDK

    # Add this new step to restore NuGet packages
    - name: Restore NuGet packages
      run: dotnet restore Durangling.sln

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2 # Configura o ambiente MSBuild/VS

    # Add a dedicated step to build Detours explicitly
    - name: Build Detours (x64 ReleaseMD)
      run: msbuild Detours\vc\Detours.vcxproj /p:Configuration=ReleaseMD /p:Platform=x64
      # Ensures Detours is built with the specific configuration required by README

    # Removed the separate 'msbuild Durangling.sln' step.
    # 'dotnet publish' below will handle building the required C# projects.

    - name: Publish Mod Project
      # Substitua 'TestgroundMod' pelo nome real do seu projeto de mod se for diferente
      # O caminho 'TestgroundMod\TestgroundMod.csproj' pode precisar ser ajustado
      # Publishing with Release configuration. This will also build TestgroundMod and its C# dependencies.
      # Added diagnostic verbosity to investigate missing DLLs
      run: dotnet publish TestgroundMod\TestgroundMod.csproj --configuration Release --runtime win-x64 --output ./publish_output -v diag
      # Publica o projeto do mod para a pasta 'publish_output'

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: Durangling-Build # Nome do artefato para download
        path: ./publish_output # Caminho para os arquivos que serão incluídos no artefato